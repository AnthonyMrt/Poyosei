# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-06-07 18:33
from __future__ import unicode_literals

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('poyosei', '0013_remove_mouvement_quantite_reference_individuelle_accorde2'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalMouvement',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('type_mouvement', models.CharField(choices=[("transfert total d'une exploitation", "transfert total d'une exploitation"), ('Transfert de Référence Individuelle avec cession partielle de foncier', 'Transfert de Référence Individuelle avec cession partielle de foncier'), ('Transfert de Référence Individuelle sans foncier', 'Transfert de Référence Individuelle sans foncier'), ('Reprise administrative', 'Reprise administrative'), ('Cession volontaire définitive', 'Cession volontaire définitive'), ('Cession volontaire temporaire', 'Cession volontaire temporaire'), ('Cessation d’activite sans repreneur', 'Cessation d’activite sans repreneur'), ('Attribution de Reference Individuelle par la reserve', 'Attribution de Reference Individuelle par la réserve'), ('Autre', 'Autre'), ('', '')], default='', max_length=100)),
                ('informations', models.TextField(blank=True)),
                ('pacage_cedant', models.CharField(max_length=10)),
                ('pacage_repreneur', models.CharField(max_length=10)),
                ('année_concerne', models.CharField(blank=True, max_length=4)),
                ('date_demande', models.DateField(blank=True, null=True)),
                ('mouvement_valide', models.BooleanField(default=False)),
                ('date_COSDA_Valide', models.DateField(blank=True, null=True)),
                ('type_reference_individuelle_modifie', models.CharField(blank=True, choices=[('définitive', 'définitive'), ('temporaire', 'temporaire'), ('autre', 'autre'), ('', '')], default='', max_length=100)),
                ('quantite_reference_individuelle_demande', models.DecimalField(blank=True, decimal_places=0, default=Decimal('0'), max_digits=10)),
                ('quantite_reference_individuelle_accorde', models.DecimalField(blank=True, decimal_places=0, default=Decimal('0'), max_digits=10)),
                ('date_creation', models.DateTimeField(blank=True, editable=False, null=True)),
                ('taxe', models.FloatField(blank=True, default=0.0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('typemouvementmodel_ptr', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='poyosei.typeMouvementModel')),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical mouvement',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPlanteur',
            fields=[
                ('pacage', models.CharField(db_index=True, help_text='Un nombre de 9 chiffres', max_length=9, verbose_name='Numéro pacage')),
                ('civilite', models.CharField(blank=True, choices=[('Mr', 'Monsieur'), ('gérant', 'Mr le gérant'), ('gérante', 'Mme la gérante'), ('Mme', 'Madame'), ('Societe', 'Societe'), ('Autre', 'Autre'), ('', '')], default='', max_length=20, verbose_name='Civilité')),
                ('nom', models.CharField(help_text='200 caractères maximum.', max_length=200, verbose_name='Nom')),
                ('prenom', models.CharField(help_text='200 caractères maximum.', max_length=100, verbose_name='Prénom')),
                ('siret', models.CharField(blank=True, help_text="code Insee permettant l'identification d'un établissement ou d'une entreprise française.", max_length=14, null=True, verbose_name='SIRET')),
                ('LPG', models.CharField(blank=True, help_text='Identifiant LPG du planteur.', max_length=100, null=True, verbose_name='Numéro LPG')),
                ('contremarque', models.CharField(blank=True, max_length=100, null=True, verbose_name='Contremarque')),
                ('denomination', models.TextField(blank=True, help_text="Texte d'aide", max_length=100, null=True, verbose_name='Dénomination')),
                ('gerant', models.TextField(blank=True, help_text="Texte d'aide", null=True, verbose_name='Gérant')),
                ('adresse', models.CharField(blank=True, help_text='Adresse du planteur', max_length=255, null=True, verbose_name='Adresse')),
                ('adresse_complementaire', models.CharField(blank=True, max_length=255, null=True)),
                ('code_postal', models.CharField(blank=True, help_text='Code postal planteur', max_length=10, null=True, verbose_name='Code postal')),
                ('commune', models.CharField(blank=True, help_text='Commune du planteur', max_length=100, null=True, verbose_name='Commune')),
                ('telephone_principale', models.CharField(blank=True, help_text='Téléphone de contact', max_length=50, null=True, verbose_name='Numéro de téléphone')),
                ('telephone_secondaire', models.CharField(blank=True, help_text='téléphone de contact', max_length=50, null=True, verbose_name='Autre téléphone')),
                ('courriel', models.EmailField(blank=True, help_text='Adresse de courriel de contact.', max_length=254, null=True, verbose_name='Courriel')),
                ('dateNaissance', models.DateField(blank=True, help_text='Date de naissance du planteur', null=True, verbose_name='Date de naissance')),
                ('date_adhesion', models.DateField(blank=True, help_text='Date adhésion', null=True, verbose_name="Date d'adhésion à l'organisme de production")),
                ('numero_exemption_Diecte', models.CharField(blank=True, help_text="Numéro d'exemption DIECTE", max_length=50, null=True, verbose_name="Numéro d'exemption DIECTE")),
                ('date_fin_Diecte', models.DateField(blank=True, help_text="Date de fin d'exemption DIECTE", null=True, verbose_name="Date de fin d'exemption DIECTE")),
                ('entreprise_associé', models.TextField(blank=True, help_text='Autre entreprise associé', null=True, verbose_name='Entreprise associé par Actionnaire')),
                ('controle', models.BooleanField(default=False, help_text='Le planteur est-il exempte de contrôle ?', verbose_name='Exemption de contrôle')),
                ('date_cessation_Activite', models.DateField(blank=True, help_text="Date de cessation d'activité", null=True, verbose_name="Date de cessation d'activité")),
                ('commentaire', models.TextField(blank=True, help_text="Toute information utile à l'instruction", null=True, verbose_name='Commentaire')),
                ('date_creation', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical planteur',
            },
        ),
    ]
